version: "3.8"
services:

  # server:
  #   networks:
  #     - booking-app
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   image: boooking-app-server-image
  #   ports:
  #     - 5000:5000
  #   container_name: boooking-app_server-container
  #   volumes:
  #     - ./server:/app
  #   env_file:
  #     - ./env/server.env
  #   environment:
  #     DEV_DB_HOST: dbPostgres
  #     TEST_DB_HOST: dbPostgres
  #   depends_on:
  #     - dbPostgres

  client:
    networks:
      - booking-app
    build:
      context: ./client
      dockerfile: Dockerfile
    image: boooking-app-client-image
    ports:
      - 3000:3000
    container_name: boooking-app-client-container
    volumes:
      - ./client:/app
    environment:
      BASE_URL: http://localhost:5000
    # env_file:
    #   - ./env/client.env

  adminer:
    networks:
      - booking-app
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - dbPostgres

  dbPostgres:
    networks:
      - booking-app
    image: postgres:10
    container_name: dbPostgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./server/.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_init:/docker-entrypoint-initdb.d


# volumes for mapping data, config, and log
volumes:
  postgres_data:
  postgres_init:

networks:
  booking-app:

